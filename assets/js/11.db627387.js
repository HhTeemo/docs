(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{370:function(n,t,e){"use strict";e.r(t);var s=e(42),a=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[n._v("#")]),n._v(" Shell")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('#!/bin/bash\nread -p "please input ipaddr:" IP\nread -p "please input netmask" MASK\nread -p "please input gateway" WAY\ncd /etc/sysconfig/network-scripts/\necho "DEVICE=eth0" > ifcfg-eth0\necho "TYPE=Ethernet" >> ifcfg-eth0\necho "ONBOOT=yes" >> ifcfg-eth0\necho "BOOTPROTo=static" >> ifcfg-eth0\necho "IPADDR=$IP" >> ifcfg-eth0\necho "NETMASK=$MASK" >> ifcfg-eth0\necho "GATEWAY=$WAY" >> ifcfg-eth0\nifdown eth0\nifup eth0\n')])])]),e("h2",{attrs:{id:"if-判断语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-判断语句"}},[n._v("#")]),n._v(" if 判断语句")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('if 条件\n    then 成立 子语句\n[elif 条件\n\tthen 子语句]\nelse\n\t不成立 子语句\nfi\n\n#!/bin/bash\nread -p "please input ipaddr:" IP\nif `ping -c2 -i0.2 -W2 $IP &> /dev/null`\n\tthen echo "$IP is up"\nelse\n\techo "$IP is down"\nfi\t\n')])])]),e("h2",{attrs:{id:"循环语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[n._v("#")]),n._v(" 循环语句")]),n._v(" "),e("p",[n._v("for 根据取值列表循环")]),n._v(" "),e("p",[n._v("while 根据条件进行循环")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('for 变量 in 取值列表\ndo\n    子语句\ndone\n\n#!/bin/bash\nfor i in {1..10}\ndo\n    echo $i\ndone\n\nwhile 条件\ndo\n\t子语句\ndone\n\n#!/bin/bash\nNUM=0\nwhile [$NUM -lt 10]\ndo\n\tlet $NUM++\n    echo $i\ndone\n\n#!/bin/bash\nread -p "please input netaddr:" NET\nfor IP in {1..254}\ndo\n\tif `ping -c2 -i0.2 -W2 $NET.$IP &> /dev/null`\n\t\tthen echo -e "$NET.$IP is \\033[31mup033[0m"\n\telse\n\t\techo -e "$NET.IP is \\033[32mdown033[0m"\n\tfi\t\ndone\n')])])]),e("p",[n._v("case 语句")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('case 变量 in\n模式1)\n\t子语句\n\t;;\n模式2)\n\t子语句\n\t;;\n*)\n\t子语句\nesac\n\n\nredhat(){\n\techo centos\n\treturn 0\n}\ncentos(){\n\techo redhat\n\treturn 0\n}\n\n\ncase $1 in\nreadhat)\n    centos\n    ;;\ncentos)\n    redhat\n    ;;\n*)\n    echo "Useage $0 {redhat|centos}"\nesac\n')])])]),e("p",[n._v("函数 将一部分代码存储到一个变量中")]),n._v(" "),e("p",[n._v("echo $? 查看上一次函数的输出值")]),n._v(" "),e("p",[n._v("chkconfig --list httpd 查看图形界面httpd服务能否重启后自启动")]),n._v(" "),e("p",[n._v("chkconfig --list nginx")]),n._v(" "),e("p",[n._v("写一个nginx的启动脚本")]),n._v(" "),e("p",[n._v("/usr/local/nginx/sbin/nginx")]),n._v(" "),e("p",[n._v("cd /etc/init.d")]),n._v(" "),e("p",[n._v("vim nginxd")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('#!/bin/bash\n# chkconfig - 84 18\n# description: nginx script\nnginx=/usr/local/nginx/sbin/nginx\n\nstart() {\n\techo "nginx starting ... [ ok ]"\n\t$nginx\t\n}\n\nstatis() {\n\tif `ss -antpl | grep nginx > /dev/null`\n\tthen echo "nignx staring ..."\n\telse echo "nignx stoping ..."\n\tfi\n}\nstop() {\n\tehco "nginx stoping ... [ ok ]"\n\t$nginx -s stop\n}\ncase $1 in\nstart)\n\tstart\n\t;;\nstop)\n\tstop\n\t;;\nstatus)\n\tstatus\n\t;;\nrestart)\n\tstop\n\tstart\n\t;;\n*)\n\techo "Usage :$0 {start|stop|status|restart}"\nesac\n')])])]),e("p",[n._v("chkconfig --list nginxd")]),n._v(" "),e("p",[n._v("chkconfig -add nginxd")]),n._v(" "),e("p",[n._v("chkconfig --level 5 nginxd on\t#5级别永久开启")])])}),[],!1,null,null,null);t.default=a.exports}}]);